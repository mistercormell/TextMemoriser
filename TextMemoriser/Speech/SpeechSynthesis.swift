//
//  SpeechSynthesis.swift
//  TextMemoriser
//
//  Created by Cormell, David - DPC on 09/10/2025.
//

import Foundation
import AVFoundation


class SpeechSynthesis {
    let speechSynthesizer = AVSpeechSynthesizer()
    
    func speak(text: String) {
        do {
            try AVAudioSession.sharedInstance().setCategory(.playback, mode: .spokenAudio)
            try AVAudioSession.sharedInstance().setActive(true)
        } catch {
            print("Failed to set audio session: \(error)")
        }
        
        let utterance = AVSpeechUtterance(string: text)
        utterance.rate = 0.4
        utterance.voice = self.getBestAvailableVoice()
        
        speechSynthesizer.speak(utterance)
    }
    
    //largely generated by Claude.ai
    private func getBestAvailableVoice() -> AVSpeechSynthesisVoice? {
        let voices = AVSpeechSynthesisVoice.speechVoices()
        
        // Get user's preferred language (e.g., "en-US", "en-GB", "en-AU")
        let userLanguage = Locale.current.language.languageCode?.identifier ?? "en"
        let userRegion = Locale.current.region?.identifier ?? "GB"
        let preferredLocale = "\(userLanguage)-\(userRegion)"
        
        // 1. Try premium voice in user's locale
        if let localPremium = voices.first(where: {
            $0.language == preferredLocale && $0.quality == .premium
        }) {
            return localPremium
        }
        
        // 2. Try ANY premium English voice
        if let anyPremiumEnglish = voices.first(where: {
            $0.language.hasPrefix("en-") && $0.quality == .premium
        }) {
            return anyPremiumEnglish
        }
        
        // 3. Try enhanced in user's locale
        if let localEnhanced = voices.first(where: {
            $0.language == preferredLocale && $0.quality == .enhanced
        }) {
            return localEnhanced
        }
        
        // 4. Try ANY enhanced English voice
        if let anyEnhancedEnglish = voices.first(where: {
            $0.language.hasPrefix("en-") && $0.quality == .enhanced
        }) {
            return anyEnhancedEnglish
        }
        
        // 5. Final fallback to user's locale or en-US
        return AVSpeechSynthesisVoice(language: preferredLocale)
            ?? AVSpeechSynthesisVoice(language: "en-GB")
    }
}
